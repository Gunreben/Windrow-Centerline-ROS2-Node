cmake_minimum_required(VERSION 3.8)
project(windrow_centerline_node)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(visualization_msgs REQUIRED)
find_package(pcl_conversions REQUIRED)
find_package(pcl_ros REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_eigen REQUIRED)
find_package(PCL REQUIRED COMPONENTS common io filters)

# Include directories
include_directories(
  include
  ${PCL_INCLUDE_DIRS}
)

# Define dependencies
set(WINDROW_DEPS
  rclcpp
  sensor_msgs
  geometry_msgs
  visualization_msgs
  pcl_conversions
  pcl_ros
  tf2_ros
  tf2_eigen
  PCL
)

# Create executables
add_executable(windrow_centerline_node src/windrow_centerline_node.cpp)
ament_target_dependencies(windrow_centerline_node ${WINDROW_DEPS})
target_link_libraries(windrow_centerline_node ${PCL_LIBRARIES})

add_executable(windrow_centerline_centroid_node src/windrow_centerline_centroid_node.cpp)
ament_target_dependencies(windrow_centerline_centroid_node ${WINDROW_DEPS})
target_link_libraries(windrow_centerline_centroid_node ${PCL_LIBRARIES})

# Install targets
install(TARGETS
  windrow_centerline_node
  windrow_centerline_centroid_node
  DESTINATION lib/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
